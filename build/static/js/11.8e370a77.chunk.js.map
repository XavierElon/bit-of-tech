{"version":3,"sources":["../node_modules/fast-deep-equal/index.js","../node_modules/is-stream/index.js","../../src/messages.ts","../../src/interfaces.ts","../../src/config.ts","../../src/loglevel.ts","../../src/utils.ts","../../src/baseProvider.ts","../../src/embedUtils.ts","../../src/PopupHandler.ts","../../src/communicationProvider.ts","../../src/inPageProvider.ts","../../src/siteMetadata.ts","../../src/embed.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/errors.ts","../../src/connection.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../../src/solanaWalletAdapter.ts"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","isStream","stream","pipe","isDuplexStream","writable","_write","_writableState","isWritableStream","readable","_read","_readableState","isReadableStream","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","connected","chainId","TORUS_BUILD_ENV","BUTTON_POSITION","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","window","loglevel","getWindowId","Math","getTorusUrl","torusUrl","logLevel","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","h","dualScreenLeft","dualScreenTop","document","left","top","w","getNetworkConfig","label","blockExplorerUrl","displayName","logo","rpcTarget","ticker","tickerName","connectionStream","jsonRpcStreamName","messages","mux","pump","jsonRpcConnection","createStreamMiddleware","rpcEngine","createIdRemapMiddleware","req","res","message","data","next","done","error","log","createLoggerMiddleware","origin","location","request","args","params","getRpcPromiseCallback","send","sendAsync","_handleStreamDisconnect","remoteLabel","emitter","warningMsg","logStreamDisconnectWarning","handleEvent","handlerArgs","handlerWrapper","handler","handle","resolve","htmlToElement","html","template","trimmedHtml","features","target","_setupTimer","Number","setInterval","clearInterval","open","Promise","close","redirect","TorusCommunicationProvider","languageTranslations","configuration","userLanguage","userLanguages","config","getUserLanguage","payload","COMMUNICATION_NOTIFICATIONS","rid","isFull","url","currentLoginProvider","isLoggedIn","isIFrameFullScreen","isConnected","_initializeState","torusIframe","COMMUNICATION_JRPC_METHODS","_handleWindow","finalUrl","handledWindow","windowId","_displayIframe","style","hideTorusButton","showTorusButton","_rpcRequest","cb","_payload","_handleConnect","_handleDisconnect","errorMessage","_handleCloseWindow","_createPopupBlockAlert","logoUrl","torusAlert","successAlert","btnContainer","bindOnLoad","attachOnLoad","documentReady","getLogoUrl","buttonPosition","hasEmittedConnection","torusWidgetVisibility","initialized","isPermanentlyDisconnected","TorusInPageProvider","PROVIDER_NOTIFICATIONS","PROVIDER_JRPC_METHODS","isUnlocked","accounts","isInternal","callback","_handleAccountsChanged","isEthAccounts","finalAccounts","dequal","_handleChainChanged","_handleUnlockStateChanged","img","reject","getSiteName","siteName","metaTitle","icon","imgExists","_icon","Boolean","getSiteMetadata","getSiteIcon","name","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","isLocalStorageAvailable","type","storage","x","e","storageAvailable","torusIframeHtml","modalZIndex","init","buildEnv","enableLogging","useLocalStorage","apiKey","extraParams","setAPIKey","dappStorageKey","torusIframeUrl","hashParams","handleSetup","dappMetadata","network","login","logout","cleanUp","clearInit","element","isElement","setProvider","showWallet","instanceId","finalPath","path","walletWindow","getUserInfo","userInfoResponse","initiateTopup","provider","topupResponse","sendTransaction","requireAllSignatures","response","signTransaction","buf","Buffer","sendTx","Transaction","signAllTransactions","encodedTransactions","allSignedTransaction","msg","signMessage","getGaslessPublicKey","handleDappStorageKey","storedKey","generatedKey","_setupWeb3","providerStream","targetWindow","contentWindow","communicationStream","inPageProvider","communicationProvider","detectAccountRequestPrototypeModifier","m","originalMethod","self","loginProvider","err","proxiedInPageProvider","deleteProperty","proxiedCommunicationProvider","torusAlertContainer","toBuffer","arr","assert","val","Error","l","r","create","inherits_browserModule","ctor","superCtor","super_","value","enumerable","configurable","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","charCodeAt","htonl","zero2","word","zero8","enc","slice","replace","push","parseInt","p","c","endian","start","end","len","k","d","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","utils","BlockHash","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","y","z","maj32","p32","s","common","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","W","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","f","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","_checkNormalize","HEX","Logger","version","defineProperty","level","toLowerCase","throwArgumentError","console","apply","_log","levels","DEBUG","INFO","WARNING","code","makeError","errors","UNKNOWN_ERROR","messageDetails","Uint8Array","hex","JSON","stringify","reason","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","NUMERIC_FAULT","fault","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","MISSING_NEW","censorship","permanent","globalLogger","warn","logger","addSlice","array","arguments","isInteger","arrayify","options","checkSafeUint53","result","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","encode","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","_bn","isPublicKeyData","decoded","bs58","equals","eq","publicKey","toBase58","toJSON","toBytes","toArrayLike","zeroPad","createWithSeed","buffer","fromPublicKey","programId","PublicKey","createProgramAddress","seeds","seed","is_on_curve","publicKeyBytes","findProgramAddress","nonce","seedsWithNonce","address","isOnCurve","default","fields","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","I","property","BufferLayout","rustString","rsl","_decode","_encode","chars","str","decodeLength","size","elem","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","isAccountSigner","index","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","filter","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","transaction","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","from","byteArray","accountCount","dataSlice","Message","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","opts","signatures","feePayer","nonceInfo","signature","add","items","item","TransactionInstruction","compileMessage","accountMetas","accountMeta","pubkey","isSigner","isWritable","pubkeySorting","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","setSigners","signers","seen","sign","uniqueSigners","signer","partialSign","_partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendOptions","skipPreflight","preflightCommitment","maxRetries","connection","status","sleep","ms","setTimeout","encodeData","allocLength","alloc","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","span","SYSTEM_INSTRUCTION_LAYOUTS","Create","layout","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","createAccount","lamports","space","transfer","assign","base","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","authorizedPubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","getMinNumSignatures","Loader","load","balanceNeeded","program","programInfo","accountPubkey","payer","toPubkey","sendAndConfirmTransaction","commitment","dataLayout","chunkSize","offset","transactions","global","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","test","TypeError","normalizeValue","iteratorFor","iterator","shift","undefined","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","byteLength","set","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","parse","oldValue","thisArg","values","entries","methods","Request","input","credentials","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","redirectStatuses","RangeError","stack","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","polyfill","ponyfill","ctx","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","slot","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","nullable","epoch","effectiveSlot","amount","postBalance","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","boolean","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","executable","owner","rentEpoch","unitsConsumed","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","state","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","root","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","PerfSampleResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","feeCalculator","lamportsPerSignature","lastValidBlockHeight","numTransactions","numSlots","samplePeriodSecs","LogsResult","_keypair","secretKey","generate","Keypair","fromSecretKey","keypair","encoder","fromSeed","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","privateKey","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","merge","withdraw","deactivate","StakeProgram","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","sha3","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","publicKeyCreate","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","VoteProgram","BN","isBN","negative","words","red","wordSize","require","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","dest","src","max","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","_strip","limbLen","limbPow","mod","imuln","_iaddn","pow","copy","_move","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","SolanaWalletAdapter","WALLET_ADAPTERS","TORUS_SOLANA","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","getChainConfig","chainConfig","ADAPTER_EVENTS","connect","WalletInitializationError","adapter","reconnected","rehydrated","WalletLoginError","disconnect","cleanup","userInfo","setAdapterSettings","BaseAdapter"],"mappings":"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","file":"static/js/11.8e370a77.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.writable !== false\n\t\t&& typeof stream._write === 'function'\n\t\t&& typeof stream._writableState === 'object';\n}\n\nexport function isReadableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.readable !== false\n\t\t&& typeof stream._read === 'function'\n\t\t&& typeof stream._readableState === 'object';\n}\n\nexport function isDuplexStream(stream) {\n\treturn isWritableStream(stream)\n\t\t&& isReadableStream(stream);\n}\n\nexport function isTransformStream(stream) {\n\treturn isDuplexStream(stream)\n\t\t&& typeof stream._transform === 'function';\n}\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Transaction } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { isDuplexStream } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \"}\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {}\n};\n\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\n\nvar log = loglevel.getLogger(\"solana-embed\");\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"Torus - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"Torus: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel; // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://solana.tor.us\";\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\nconst getNetworkConfig = label => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.mainnet-beta.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.testnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    default:\n      return undefined;\n  }\n};\n\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n}\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"windowRefs\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState); // public state\n\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {}; // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?windowId=\").concat(windowId));\n\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    }\n\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n\n      return;\n    } // Add to collection only if window is opened\n\n\n    this.windowRefs[windowId] = handledWindow; // We tell the iframe that the window has been successfully opened\n\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  } // Called if the iframe wants to close the window cause it is done processing the request\n\n\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  getLogoUrl() {\n    const logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    return logoUrl;\n  }\n\n}\n\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    }; // json rpc notification listener\n\n\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n}\n\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/frame\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationProvider\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString(); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement(\"<div id=\\\"torusAlertContainer\\\" style=\\\"display:none; z-index: \".concat(this.alertZIndex.toString(), \"\\\"></div>\"));\n    this.styleLink = htmlToElement(\"<link href=\\\"\".concat(torusUrl, \"/css/widget.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"));\n\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata(); // send init params here\n\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network: typeof network === \"string\" ? getNetworkConfig(network) : network,\n              dappMetadata,\n              extraParams\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      } // If user is already logged in, we assume they have given access to the website\n\n\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      } // This would never happen, but just in case\n\n\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n\n    if (this.dappStorageKey) {\n      finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    } // No need to track this window state. Hence, no _handleWindow call.\n\n\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n\n    this.communicationProvider._handleWindow(windowId);\n\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  } // Solana specific API\n\n\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    const buf = Buffer.from(response, \"hex\");\n    const sendTx = Transaction.from(buf);\n    return sendTx;\n  }\n\n  async signAllTransactions(transactions) {\n    const encodedTransactions = transactions.map(x => x.serialize({\n      requireAllSignatures: false\n    }).toString(\"hex\"));\n    const response = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedTransactions\n      }\n    });\n    const allSignedTransaction = response.map(msg => Transaction.from(Buffer.from(msg, \"hex\")));\n    return allSignedTransaction;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  } // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getWindowId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // compose the inPage provider\n\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        }); // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n\n\n        _payload.windowId = windowId;\n      }\n\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n\n        }); // for communication methods sending window id in jrpc req params\n\n\n        _payload.params.windowId = windowId;\n      }\n\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    }; // detect solana_requestAccounts and pipe to enable for now\n\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m]; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      const self = this;\n\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          }) // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res)) // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n\n        return originalMethod.apply(this, [request, cb]);\n      };\n    }; // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n\n\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };\n//# sourceMappingURL=solanaEmbed.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,"import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (\n  property: string = 'publicKey',\n): BufferLayout.Layout => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): BufferLayout.Layout => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer: any, offset: any) => {\n    const data = _decode(buffer, offset);\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str: any, buffer: any, offset: any) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  (rsl as any).alloc = (str: any) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS: {\n  [type in SystemInstructionType]: InstructionType;\n} = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport type {Response} from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: SimulatedTransactionAccountInfo[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          pick({\n            executable: boolean(),\n            owner: string(),\n            lamports: number(),\n            data: array(string()),\n            rentEpoch: optional(number()),\n          }),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retring calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    configOrCommitment?: GetMultipleAccountsConfig | Commitment,\n  ): Promise<(AccountInfo<Buffer | ParsedAccountData> | null)[]> {\n    const keys = publicKeys.map(key => key.toBase58());\n\n    let commitment;\n    let encoding: 'base64' | 'jsonParsed' = 'base64';\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n        encoding = 'base64';\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding || 'base64';\n      }\n    }\n\n    const args = this._buildArgs([keys], commitment, encoding);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; lastValidBlockHeight: number}> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; lastValidBlockHeight: number}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        publicKeyOffset,\n        publicKeyInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  | 'AuthorizeWithSeed'\n  | 'Authorize'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Split'\n  | 'Withdraw'\n  | 'Merge';\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS: {\n  [type in StakeInstructionType]: InstructionType;\n} = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n};\n\nexport type AuthorizedVoter = {\n  epoch: number;\n  authorizedVoter: PublicKey;\n};\n\nexport type PriorVoter = {\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n};\n\nexport type BlockTimestamp = {\n  slot: number;\n  timetamp: number;\n};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({epoch, authorizedVoter}: AuthorizedVoter) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoter) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty,\n}: {\n  buf: PriorVoter[];\n  idx: number;\n  isEmpty: boolean;\n}): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx)];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  | 'Authorize'\n  | 'InitializeAccount'\n  | 'Withdraw';\n\nconst VOTE_INSTRUCTION_LAYOUTS: {\n  [type in VoteInstructionType]: InstructionType;\n} = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Torus from '@toruslabs/solana-embed';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, ADAPTER_EVENTS, WalletInitializationError, WalletLoginError } from '@web3auth/base';\nimport { TorusInjectedProvider } from '@web3auth/solana-provider';\nimport log from 'loglevel';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaWalletAdapter extends BaseAdapter {\n  constructor() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.TORUS_SOLANA);\n\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(this, \"torusInstance\", null);\n\n    _defineProperty(this, \"torusWalletOptions\", void 0);\n\n    _defineProperty(this, \"initParams\", void 0);\n\n    _defineProperty(this, \"loginSettings\", {});\n\n    _defineProperty(this, \"solanaProvider\", null);\n\n    _defineProperty(this, \"rehydrated\", false);\n\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n  }\n\n  get provider() {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      var _this$solanaProvider;\n\n      return ((_this$solanaProvider = this.solanaProvider) === null || _this$solanaProvider === void 0 ? void 0 : _this$solanaProvider.provider) || null;\n    }\n\n    return null;\n  }\n\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options) {\n    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set\n\n    let network;\n\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const {\n        blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        rpcTarget,\n        chainId\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        logo: \"\"\n      };\n    } else {\n      const {\n        chainId,\n        blockExplorer,\n        displayName,\n        rpcTarget,\n        ticker,\n        tickerName\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        tickerName,\n        ticker,\n        logo: \"\"\n      };\n    }\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"solana wallet network\", network);\n    await this.torusInstance.init(_objectSpread(_objectSpread({\n      showTorusButton: false\n    }, this.initParams), {}, {\n      network\n    }));\n    log.debug(\"solana chainConfig\", this.chainConfig);\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect() {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, {\n      adapter: WALLET_ADAPTERS.TORUS_SOLANA\n    });\n\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      await this.solanaProvider.setupProvider(this.torusInstance.provider);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, {\n        adapter: WALLET_ADAPTERS.TORUS_SOLANA,\n        reconnected: this.rehydrated\n      });\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(_) {}\n\n}\n\nexport { SolanaWalletAdapter };\n//# sourceMappingURL=torusSolanaAdapter.esm.js.map\n"],"sourceRoot":""}